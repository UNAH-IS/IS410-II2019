Clase es una estructura de datos o un tipo de datos.
Puede crearse una clase como una plantilla de un elemento real o abstracto, esto se hace definiendo cualidades o caracteristicas y acciones (verbos).

Pilares de Programacion Orientada a Objetos
Encapsulación: Se utiliza para proteger los atributos/metodos de una clase ante posibles accesos no intencionales o accidentales. Tecnicamente se aplica definiendo atributos con el modificador private y accediendo a ellos mediante metodos publicos comunmente conocidos como metodos setters y getter

Abstracción: Caracteristica que nos permite encapsular funcionalidades para que sean utilizadas por otros sin necesidad de que sepan como funcionan internamente, es decir se abstraen de su funcionalidad.

Herencia: Es la funcionalidad que permite reutilizar codigo extendiendo la funcionalidad de una clase base.
Se aplica herencia identificando atributos/metodos en comun de un conjunto de clases y encapsulandolos en una nueva clase la cual se denominará clase padre, superclase o clase base. De dicha clase se pueden extender más clases las cuales son denominadas clases hijas, subclases o clases derivadas.
    *Clases Abstractas: Son estructuras de datos más genericas, se utilizan generalmente para clases padre y tiene las siguientes caracteristicas:
        -No se puede instanciar
        -El modificador utilizado para clases abstractas es abstract class
        -Un metodo abstracto no tiene cuerpo, solo se define, ademas es OBLIGATORIO sobreescribirlo en clases hijas.
        -Una clase abstracta puede tener o no metodos abstractos.
        -Si un metodo es abstracto, la clase debe ser abstracta.
    *Interfaz (interface): Estructura de datos similar a una clase, su objetivo es definir reglas y generalizar aún más que las clases abstractas. En algunas ocasiones es llamada clase abstracta pura.
        -No se puede instanciar.
        -No tiene constructor.
        -Toooooodos sus metodos son abstractos.
        -Todos sus miembros son public
        -Todos sus atributos son constantes estaticas.
        -Se utiliza la palabra reservada interface en vez de class
        -Para aplicar herencia entre clase e interfaz se utiliza implements.
        -Para aplicar herencia entre interfaz e interfaz se utiliza extends.
    

Polimorfismo


Atributos/Metodos estaticos:
Son miembros a los cuales se puede acceder sin necesidad de tener una instancia.
En dicho caso se tiene que acceder al atributo utilizando el nombre de la clase.
En el caso de los atributos estaticos tienen el mismo valor para cualquier instancia.